[{"/Users/lallasu/Desktop/blogproject/client/src/index.js":"1","/Users/lallasu/Desktop/blogproject/client/src/App.js":"2","/Users/lallasu/Desktop/blogproject/client/src/store.js":"3","/Users/lallasu/Desktop/blogproject/client/src/redux/sagas/index.js":"4","/Users/lallasu/Desktop/blogproject/client/src/redux/reducers/index.js":"5","/Users/lallasu/Desktop/blogproject/client/src/routes/Router.js":"6","/Users/lallasu/Desktop/blogproject/client/src/components/Footer.js":"7","/Users/lallasu/Desktop/blogproject/client/src/components/Header.js":"8","/Users/lallasu/Desktop/blogproject/client/src/components/AppNavbar.js":"9","/Users/lallasu/Desktop/blogproject/client/src/redux/reducers/authReducer.js":"10","/Users/lallasu/Desktop/blogproject/client/src/redux/types.js":"11","/Users/lallasu/Desktop/blogproject/client/src/components/auth/LoginModal.js":"12","/Users/lallasu/Desktop/blogproject/client/src/redux/sagas/authSaga.js":"13"},{"size":156,"mtime":1613143569023,"results":"14","hashOfConfig":"15"},{"size":549,"mtime":1613033808512,"results":"16","hashOfConfig":"15"},{"size":1131,"mtime":1612601595695,"results":"17","hashOfConfig":"15"},{"size":291,"mtime":1613289116137,"results":"18","hashOfConfig":"15"},{"size":310,"mtime":1613136269691,"results":"19","hashOfConfig":"15"},{"size":354,"mtime":1613027027617,"results":"20","hashOfConfig":"15"},{"size":621,"mtime":1612878054617,"results":"21","hashOfConfig":"15"},{"size":549,"mtime":1613284838578,"results":"22","hashOfConfig":"15"},{"size":1252,"mtime":1613290650312,"results":"23","hashOfConfig":"15"},{"size":1848,"mtime":1613284726835,"results":"24","hashOfConfig":"15"},{"size":327,"mtime":1613037089664,"results":"25","hashOfConfig":"15"},{"size":2938,"mtime":1613290495976,"results":"26","hashOfConfig":"15"},{"size":935,"mtime":1613288884976,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"12re7x",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/lallasu/Desktop/blogproject/client/src/index.js",[],["58","59"],"/Users/lallasu/Desktop/blogproject/client/src/App.js",["60","61"],"import React from 'react'; \nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, { history}  from './store';\nimport MyRouter from'./routes/Router';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst App=()=> {\n  return (\n    <Provider store={store}>\n      <Router>\n      {/* <ConnectedRouter history={history}> */}\n        <MyRouter />\n      {/* </ConnectedRouter> */}\n      </Router>\n    </Provider>\n  )\n}\nexport default App;\n","/Users/lallasu/Desktop/blogproject/client/src/store.js",[],"/Users/lallasu/Desktop/blogproject/client/src/redux/sagas/index.js",[],"/Users/lallasu/Desktop/blogproject/client/src/redux/reducers/index.js",[],"/Users/lallasu/Desktop/blogproject/client/src/routes/Router.js",[],"/Users/lallasu/Desktop/blogproject/client/src/components/Footer.js",[],"/Users/lallasu/Desktop/blogproject/client/src/components/Header.js",[],"/Users/lallasu/Desktop/blogproject/client/src/components/AppNavbar.js",[],"/Users/lallasu/Desktop/blogproject/client/src/redux/reducers/authReducer.js",[],"/Users/lallasu/Desktop/blogproject/client/src/redux/types.js",[],["62","63"],"/Users/lallasu/Desktop/blogproject/client/src/components/auth/LoginModal.js",["64"],"import React , {useState, useEffect} from 'react';\nimport { NavLink, Modal, ModalHeader, ModalBody,Alert, Form, FormGroup, Label, Input, Button} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CLEAR_ERROR_REQUEST, LOGIN_REQUEST } from '../../redux/types';\nimport InputGroup from 'react-bootstrap/InputGroup'\n \nconst LoginModal = () => {\n    const [modal, setModal] = useState(false);\n    const [localMsg, setLocalMsg] = useState('')\n    const [form, setValues] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    const dispatch = useDispatch()\n    const {errorMsg} = useSelector((state) => state.auth) \n\n    useEffect(() => {\n        try {\n            setLocalMsg(errorMsg)\n        } catch(e) {\n            console.log(e)\n        }\n    }, [errorMsg])\n\n    const handleToggle = () => {\n        dispatch({\n            type: CLEAR_ERROR_REQUEST,\n        })\n        setModal(!modal)\n    }\n\n    const onChange = (e) => {\n        setValues({\n            ...form,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const {email, password} = form\n        const user = {email, password}\n        console.log(user)\n        dispatch({\n            type: LOGIN_REQUEST,\n            payload: user,\n        })\n    }\n\n    return (\n        <div>\n            <NavLink onClick={handleToggle} href=\"#\">\n                Login\n            </NavLink>\n            <Modal isOpen={modal} toggle={handleToggle}>\n                <ModalHeader toggle={handleToggle}>Login</ModalHeader>\n            \n                <ModalBody>\n                    {localMsg ? <Alert color=\"danger\">{localMsg}</Alert> : null}\n                    {console.log(\"modal??\",modal)}\n                    \n                    <Form onSubmit={onSubmit}>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input \n                                type=\"email\" \n                                name=\"email\" \n                                id=\"email\" \n                                placeholder=\"Email\" \n                                onChange={onChange} \n                            />\n                            <Label for=\"password\">Password</Label>\n                            <Input \n                                type=\"password\" \n                                name=\"password\"\n                                id=\"password\"\n                                placeholder=\"Password\" \n                                onChange={onChange} \n                            />\n                            <Button color=\"dark\" style={{marginTop:\"2rem\"}} block>\n                                Login\n                            </Button>\n                        </FormGroup>\n                    </Form>\n\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n};\n\nexport default LoginModal;","/Users/lallasu/Desktop/blogproject/client/src/redux/sagas/authSaga.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":4,"column":17,"nodeType":"71","messageId":"72","endLine":4,"endColumn":24},{"ruleId":"65","replacedBy":"74"},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","severity":1,"message":"76","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":18},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'ConnectedRouter' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.",["77"],["78"],"'InputGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]